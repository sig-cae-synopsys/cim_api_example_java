
package com.coverity.ws.v7;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DefectService", targetNamespace = "http://ws.coverity.com/v7")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DefectService {


    /**
     * 
     * @param filterSpec
     * @param cids
     * @return
     *     returns java.util.List<com.coverity.ws.v7.StreamDefectDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStreamDefects", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetStreamDefects")
    @ResponseWrapper(localName = "getStreamDefectsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetStreamDefectsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getStreamDefectsRequest", output = "http://ws.coverity.com/v7/DefectService/getStreamDefectsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getStreamDefects/Fault/CovRemoteServiceException")
    })
    public List<StreamDefectDataObj> getStreamDefects(
        @WebParam(name = "cids", targetNamespace = "")
        List<Long> cids,
        @WebParam(name = "filterSpec", targetNamespace = "")
        StreamDefectFilterSpecDataObj filterSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamId
     * @param pageSpec
     * @return
     *     returns com.coverity.ws.v7.StreamFunctionPageDataObj
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStreamFunctionsInternal", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetStreamFunctionsInternal")
    @ResponseWrapper(localName = "getStreamFunctionsInternalResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetStreamFunctionsInternalResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getStreamFunctionsInternalRequest", output = "http://ws.coverity.com/v7/DefectService/getStreamFunctionsInternalResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getStreamFunctionsInternal/Fault/CovRemoteServiceException")
    })
    public StreamFunctionPageDataObj getStreamFunctionsInternal(
        @WebParam(name = "streamId", targetNamespace = "")
        StreamIdDataObj streamId,
        @WebParam(name = "pageSpec", targetNamespace = "")
        PageSpecDataObj pageSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param projectId
     * @return
     *     returns java.util.List<com.coverity.ws.v7.CheckerSubcategoryIdDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCheckerSubcategoriesForProject", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCheckerSubcategoriesForProject")
    @ResponseWrapper(localName = "getCheckerSubcategoriesForProjectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCheckerSubcategoriesForProjectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForProjectRequest", output = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForProjectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForProject/Fault/CovRemoteServiceException")
    })
    public List<CheckerSubcategoryIdDataObj> getCheckerSubcategoriesForProject(
        @WebParam(name = "projectId", targetNamespace = "")
        ProjectIdDataObj projectId)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamIds
     * @return
     *     returns java.util.List<com.coverity.ws.v7.CheckerSubcategoryIdDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCheckerSubcategoriesForStreams", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCheckerSubcategoriesForStreams")
    @ResponseWrapper(localName = "getCheckerSubcategoriesForStreamsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCheckerSubcategoriesForStreamsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForStreamsRequest", output = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForStreamsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCheckerSubcategoriesForStreams/Fault/CovRemoteServiceException")
    })
    public List<CheckerSubcategoryIdDataObj> getCheckerSubcategoriesForStreams(
        @WebParam(name = "streamIds", targetNamespace = "")
        List<StreamIdDataObj> streamIds)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param componentIds
     * @param projectId
     * @return
     *     returns java.util.List<com.coverity.ws.v7.ComponentMetricsDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComponentMetricsForProject", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetComponentMetricsForProject")
    @ResponseWrapper(localName = "getComponentMetricsForProjectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetComponentMetricsForProjectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getComponentMetricsForProjectRequest", output = "http://ws.coverity.com/v7/DefectService/getComponentMetricsForProjectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getComponentMetricsForProject/Fault/CovRemoteServiceException")
    })
    public List<ComponentMetricsDataObj> getComponentMetricsForProject(
        @WebParam(name = "projectId", targetNamespace = "")
        ProjectIdDataObj projectId,
        @WebParam(name = "componentIds", targetNamespace = "")
        List<ComponentIdDataObj> componentIds)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTriageForCIDsInTriageStore", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateTriageForCIDsInTriageStore")
    @ResponseWrapper(localName = "updateTriageForCIDsInTriageStoreResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateTriageForCIDsInTriageStoreResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/updateTriageForCIDsInTriageStoreRequest", output = "http://ws.coverity.com/v7/DefectService/updateTriageForCIDsInTriageStoreResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/updateTriageForCIDsInTriageStore/Fault/CovRemoteServiceException")
    })
    public void updateTriageForCIDsInTriageStore(
        @WebParam(name = "arg0", targetNamespace = "")
        TriageStoreIdDataObj arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Long> arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        DefectStateSpecDataObj arg2)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamDefectIds
     * @param defectStateSpec
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateStreamDefects", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateStreamDefects")
    @ResponseWrapper(localName = "updateStreamDefectsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateStreamDefectsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/updateStreamDefectsRequest", output = "http://ws.coverity.com/v7/DefectService/updateStreamDefectsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/updateStreamDefects/Fault/CovRemoteServiceException")
    })
    public void updateStreamDefects(
        @WebParam(name = "streamDefectIds", targetNamespace = "")
        List<StreamDefectIdDataObj> streamDefectIds,
        @WebParam(name = "defectStateSpec", targetNamespace = "")
        DefectStateSpecDataObj defectStateSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param dmCid
     * @param databaseDescription
     * @return
     *     returns java.lang.Long
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCIDForDMCID", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDForDMCID")
    @ResponseWrapper(localName = "getCIDForDMCIDResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDForDMCIDResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCIDForDMCIDRequest", output = "http://ws.coverity.com/v7/DefectService/getCIDForDMCIDResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCIDForDMCID/Fault/CovRemoteServiceException")
    })
    public Long getCIDForDMCID(
        @WebParam(name = "dmCid", targetNamespace = "")
        Long dmCid,
        @WebParam(name = "databaseDescription", targetNamespace = "")
        String databaseDescription)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Long
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCIDForMergeKey", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDForMergeKey")
    @ResponseWrapper(localName = "getCIDForMergeKeyResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDForMergeKeyResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCIDForMergeKeyRequest", output = "http://ws.coverity.com/v7/DefectService/getCIDForMergeKeyResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCIDForMergeKey/Fault/CovRemoteServiceException")
    })
    public Long getCIDForMergeKey(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamIds
     * @param cid
     * @return
     *     returns java.util.List<com.coverity.ws.v7.DefectChangeDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMergedDefectHistory", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectHistory")
    @ResponseWrapper(localName = "getMergedDefectHistoryResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectHistoryResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getMergedDefectHistoryRequest", output = "http://ws.coverity.com/v7/DefectService/getMergedDefectHistoryResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getMergedDefectHistory/Fault/CovRemoteServiceException")
    })
    public List<DefectChangeDataObj> getMergedDefectHistory(
        @WebParam(name = "cid", targetNamespace = "")
        Long cid,
        @WebParam(name = "streamIds", targetNamespace = "")
        List<StreamIdDataObj> streamIds)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamIds
     * @param filterSpec
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCIDsForStreams", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDsForStreams")
    @ResponseWrapper(localName = "getCIDsForStreamsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDsForStreamsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCIDsForStreamsRequest", output = "http://ws.coverity.com/v7/DefectService/getCIDsForStreamsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCIDsForStreams/Fault/CovRemoteServiceException")
    })
    public List<Long> getCIDsForStreams(
        @WebParam(name = "streamIds", targetNamespace = "")
        List<StreamIdDataObj> streamIds,
        @WebParam(name = "filterSpec", targetNamespace = "")
        MergedDefectFilterSpecDataObj filterSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param filterSpec
     * @param projectId
     * @param pageSpec
     * @return
     *     returns com.coverity.ws.v7.MergedDefectsPageDataObj
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMergedDefectsForProject", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectsForProject")
    @ResponseWrapper(localName = "getMergedDefectsForProjectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectsForProjectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForProjectRequest", output = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForProjectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForProject/Fault/CovRemoteServiceException")
    })
    public MergedDefectsPageDataObj getMergedDefectsForProject(
        @WebParam(name = "projectId", targetNamespace = "")
        ProjectIdDataObj projectId,
        @WebParam(name = "filterSpec", targetNamespace = "")
        MergedDefectFilterSpecDataObj filterSpec,
        @WebParam(name = "pageSpec", targetNamespace = "")
        PageSpecDataObj pageSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param filterSpec
     * @param projectId
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCIDsForProject", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDsForProject")
    @ResponseWrapper(localName = "getCIDsForProjectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetCIDsForProjectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getCIDsForProjectRequest", output = "http://ws.coverity.com/v7/DefectService/getCIDsForProjectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getCIDsForProject/Fault/CovRemoteServiceException")
    })
    public List<Long> getCIDsForProject(
        @WebParam(name = "projectId", targetNamespace = "")
        ProjectIdDataObj projectId,
        @WebParam(name = "filterSpec", targetNamespace = "")
        MergedDefectFilterSpecDataObj filterSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param streamIds
     * @param filterSpec
     * @param pageSpec
     * @return
     *     returns com.coverity.ws.v7.MergedDefectsPageDataObj
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMergedDefectsForStreams", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectsForStreams")
    @ResponseWrapper(localName = "getMergedDefectsForStreamsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetMergedDefectsForStreamsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForStreamsRequest", output = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForStreamsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getMergedDefectsForStreams/Fault/CovRemoteServiceException")
    })
    public MergedDefectsPageDataObj getMergedDefectsForStreams(
        @WebParam(name = "streamIds", targetNamespace = "")
        List<StreamIdDataObj> streamIds,
        @WebParam(name = "filterSpec", targetNamespace = "")
        MergedDefectFilterSpecDataObj filterSpec,
        @WebParam(name = "pageSpec", targetNamespace = "")
        PageSpecDataObj pageSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param filterSpec
     * @param projectId
     * @return
     *     returns java.util.List<com.coverity.ws.v7.ProjectMetricsDataObj>
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTrendRecordsForProject", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetTrendRecordsForProject")
    @ResponseWrapper(localName = "getTrendRecordsForProjectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetTrendRecordsForProjectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getTrendRecordsForProjectRequest", output = "http://ws.coverity.com/v7/DefectService/getTrendRecordsForProjectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getTrendRecordsForProject/Fault/CovRemoteServiceException")
    })
    public List<ProjectMetricsDataObj> getTrendRecordsForProject(
        @WebParam(name = "projectId", targetNamespace = "")
        ProjectIdDataObj projectId,
        @WebParam(name = "filterSpec", targetNamespace = "")
        ProjectTrendRecordFilterSpecDataObj filterSpec)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param fileId
     * @param streamId
     * @return
     *     returns com.coverity.ws.v7.FileContentsDataObj
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileContents", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetFileContents")
    @ResponseWrapper(localName = "getFileContentsResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.GetFileContentsResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/getFileContentsRequest", output = "http://ws.coverity.com/v7/DefectService/getFileContentsResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/getFileContents/Fault/CovRemoteServiceException")
    })
    public FileContentsDataObj getFileContents(
        @WebParam(name = "streamId", targetNamespace = "")
        StreamIdDataObj streamId,
        @WebParam(name = "fileId", targetNamespace = "")
        FileIdDataObj fileId)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createMergedDefect", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.CreateMergedDefect")
    @ResponseWrapper(localName = "createMergedDefectResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.CreateMergedDefectResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/createMergedDefectRequest", output = "http://ws.coverity.com/v7/DefectService/createMergedDefectResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/createMergedDefect/Fault/CovRemoteServiceException")
    })
    public void createMergedDefect(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        XMLGregorianCalendar arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5)
        throws CovRemoteServiceException_Exception
    ;

    /**
     * 
     * @param properties
     * @param defectInstanceId
     * @throws CovRemoteServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateDefectInstanceProperties", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateDefectInstanceProperties")
    @ResponseWrapper(localName = "updateDefectInstancePropertiesResponse", targetNamespace = "http://ws.coverity.com/v7", className = "com.coverity.ws.v7.UpdateDefectInstancePropertiesResponse")
    @Action(input = "http://ws.coverity.com/v7/DefectService/updateDefectInstancePropertiesRequest", output = "http://ws.coverity.com/v7/DefectService/updateDefectInstancePropertiesResponse", fault = {
        @FaultAction(className = CovRemoteServiceException_Exception.class, value = "http://ws.coverity.com/v7/DefectService/updateDefectInstanceProperties/Fault/CovRemoteServiceException")
    })
    public void updateDefectInstanceProperties(
        @WebParam(name = "defectInstanceId", targetNamespace = "")
        DefectInstanceIdDataObj defectInstanceId,
        @WebParam(name = "properties", targetNamespace = "")
        List<PropertySpecDataObj> properties)
        throws CovRemoteServiceException_Exception
    ;

}
